<Page x:Class="ShadowrunCombatHelper.Views.InitiativeTracker_View"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:ShadowrunCombatHelper.Views"
      xmlns:viewmodels="clr-namespace:ShadowrunCombatHelper.ViewModels"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:charsummary="clr-namespace:ShadowrunCombatHelper.UserControls"
      xmlns:System="clr-namespace:System;assembly=mscorlib"

      mc:Ignorable="d"
      d:DesignHeight="301.333" d:DesignWidth="572"
      Title="InitiativeTracker_View" Loaded="Page_Loaded">

    <Page.Resources>
        <CollectionViewSource x:Key="CombatantSource" Source="{Binding CombatQueue}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Initiative" Direction="Descending" />
                <scm:SortDescription PropertyName="Affiliation.Name" Direction="Descending" />
                <scm:SortDescription PropertyName="CharacterName" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="CombatantSkills" Source="{Binding CurrentCharacter.Skills}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="SkillType" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <GridLength x:Key="CurrentCharViewColumnWidth">130</GridLength>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    </Page.Resources>
    <Grid Visibility="{Binding Path=WindowVisible, Converter={StaticResource BoolToVisConverter}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5px" />
        </Grid.RowDefinitions>
        <!--Main Grid Row 0-->

        <TextBlock Margin="0" Grid.Row="0" Grid.ColumnSpan="2" FontSize="24" VerticalAlignment="Center" Background="{Binding CurrentCharacter.Affiliation.BackgroundColorBrush}">
            <Run  Text="{Binding Path=CurrentRound, StringFormat='Round {0}'}" />
            <Run Text="{Binding Path=CurrentCharacter.Affiliation, StringFormat='  -  {0}'}" />
            <Run Text="{Binding Path=CurrentCharacter.CharacterName, StringFormat=' {0} turn'}" />
        </TextBlock>

        <!--Main Grid Row 1-->
        <ScrollViewer Grid.Column="1" Grid.Row="1">
            <ItemsControl x:Name="CharacterStack" ItemsSource="{Binding Source={StaticResource CombatantSource}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" CanVerticallyScroll="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <charsummary:CharacterSummaryDisplay />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <Grid Grid.Row="1" Grid.Column="0" Name="grdActivePlayerInfoPanel">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0">Active Player Information</TextBlock>

            <DockPanel Grid.Column="0" Grid.Row="1">
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource CurrentCharViewColumnWidth}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Character Name" />
                    <TextBlock Grid.Column="1" Text="{Binding CurrentCharacter.CharacterName}" />
                </Grid>

                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource CurrentCharViewColumnWidth}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Character Status" />
                    <TextBlock Grid.Column="1" Text="{Binding CurrentCharacter.CharStatus}" />
                </Grid>
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource CurrentCharViewColumnWidth}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Current Combat State" Grid.Column="0" />
                    <ComboBox Grid.Column="1" Name="CombatStates" SelectedItem="{Binding CurrentCharacter.CharCombatState}" />
                </Grid>
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource CurrentCharViewColumnWidth}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Select an action" Grid.Column="0" />
                    <Button Name="ActionButton" Grid.Column="1" ContextMenuService.IsEnabled="False" Click="ActionButton_Click">
                        <Button.Content>
                            <TextBlock>Actions</TextBlock>
                        </Button.Content>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="End Round" Name="mnuEndRound" Click="mnuEndRound_Click" />
                                <MenuItem Header="Deal Damage" Name="btnDealDamage" Click="btnDealDamage_Click" />
                                <MenuItem Header="Interrupt Actions">
                                    <MenuItem Header="Full Defense" Name="mnuFullDefense" Click="mnuFullDefense_Click" IsEnabled="{Binding CurrentCharacter.CanFullDefense}" />
                                    <MenuItem Header="Block" Name="mnuBlock" Click="mnuBlock_Click" IsEnabled="{Binding CurrentCharacter.CanInterrupt}" />
                                    <MenuItem Header="Dodge" Name="mnuDodge" Click="mnuDodge_Click" IsEnabled="{Binding CurrentCharacter.CanInterrupt}" />
                                    <MenuItem Header="Hit The Dirt" Name="mnuHitTheDirt" Click="MenuItem_Click" IsEnabled="{Binding CurrentCharacter.CanInterrupt}" />
                                    <MenuItem Header="Intercept" Name="mnuIntercept" Click="mnuIntercept_Click" IsEnabled="{Binding CurrentCharacter.CanInterrupt}" />
                                    <MenuItem Header="Parry" Name="mnuParry" Click="mnuParry_Click" IsEnabled="{Binding CurrentCharacter.CanInterrupt}" />
                                </MenuItem>
                                <MenuItem IsChecked="{Binding CurrentCharacter.Running, Mode=OneWay}" Header="Running" Name="mnuRunningToggle" Click="mnuRunningToggle_Click" />
                                <MenuItem Header="Actions">
                                    <MenuItem Header="Simple Action" Name="mnuSimpleAction" IsEnabled="{Binding CurrentCharacter.CanSimpleAction}" Click="mnuSimpleAction_Click" />
                                    <MenuItem Header="Complex Action" Name="mnuComplexAction" IsEnabled="{Binding CurrentCharacter.CanComplexAction}" Click="mnuComplexAction_Click" />
                                    <MenuItem Header="Free Action" Name="mnuFreeAction" IsEnabled="{Binding CurrentCharacter.CanFreeAction}" Click="mnuFreeAction_Click" />
                                </MenuItem>
                                <MenuItem Header="Move" Name="mnuMoveCharacter" Click="mnuMoveCharacter_Click" IsEnabled="{Binding CurrentCharacter.CanMove}" />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </Grid>
                <DataGrid DockPanel.Dock="Top" Name="SkillsPanelAlt" ItemsSource="{Binding Source={StaticResource ResourceKey=CombatantSkills}}"  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Skill Name" Binding="{Binding SkillName, Mode=OneWay}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Skill Value" Binding="{Binding TrainingValue, Mode=OneWay}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Attribute Adj." Binding="{Binding AttributeModifier, Mode=OneWay}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Total Die Pool" Binding="{Binding AdjustedTotalSkillValue, Mode=OneWay}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Limit" Binding="{Binding Limit, Mode=OneWay}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Limited By" Binding="{Binding LimitBy, Mode=OneWay}" IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <DockPanel MaxWidth="{Binding ElementName=SkillsPanelAlt, Path=ActualWidth}">
                                    <TextBlock DockPanel.Dock="Left" Text="Description: " />
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description, Mode=OneWay}" />
                                </DockPanel>
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="False">
                                                    <Expander.Header>
                                                        <TextBlock Foreground="Black" Text="{Binding Name}" />
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </DockPanel>
        </Grid>
        <!--Grid Row 2-->
        <Button Grid.Row="2" Grid.ColumnSpan="2" Name="EndCombatButton" Click="EndCombatButton_Click">End Combat</Button>
    </Grid>
</Page>